$gap: 4vh;
$padding: 4vh;
$color: #48CAE4;

$bp: (
        mobile : 480px,
        tablet : 768px,
        desktop : 1440px,
);

* {
  margin: 0px;
  padding: 0px;
  box-sizing: border-box;

  // Changing the body here

  body {
    width: 100%;
    min-height: 100vh;
    font-family: sans-serif;
    font-size: 45px;
  }
}

@mixin query($display) {
  @each $key, $value in $bp {
    //  definimos el ancho m√°ximo
    @if ($display == $key) {
      @media (max-width: $value) {
        @content;
      }
    }
  }
}

.container {
  display: flex;
  flex-direction: column;
  gap: $gap;
  padding: $padding;
}

// Estilos para todos los .block-*
[class ^="block-"] {
  display: flex;
  flex-direction: row;
  gap: $gap;
}

// Estilos para todos los .box-*
[class ^="box-"] {
  display: flex;
  justify-content: center;
  align-items: center;
  border: 1vh solid $color;
  border-radius: 10px;
}

// Definimos A & E juntos
.box-1, .box-5 {
  flex-basis: 100%;
  height: 20vh;
}

// Definimos C aqui
.box-3 {
  flex-basis: 60%;
  //  Eliminamos el gap y el padding
  height: 60vh -$gap*2-$padding*2;
}

// Definimos B y D juntos
.box-2, .box-4 {
  flex-basis: 20%;
}

@include query(mobile) {
  .block-2 {
    flex-direction: column;
    height: 60vh;
  }
  // Hiding our B block
  .box-2 {
    display: none;
  }
  // Increasing Height of C
  .box-3 {
    flex-basis: 80%;
  }
}
